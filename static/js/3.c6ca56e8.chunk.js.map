{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/PrfolieStatuswithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/Post/MyPosts.js","components/Profile/MyPosts/Post/MyPostsContainer.js","components/Profile/ProfileInfo/Profile.js","components/Profile/ProfileInfo/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","color","fullName","aboutMe","Post","console","log","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","el","postsBlock","AddNewPostRedux","onSubmit","values","addPost","newPostText","maxlength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfilesContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c6ca56e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"color\":\"ProfileInfo_color__31RAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3BujM\",\"posts\":\"MyPosts_posts__22lkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, { useState, useEffect } from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const statusChange = e => {\n        setStatus( e.currentTarget.value);\n    }; \n    useEffect(()=> {\n        setStatus(props.status);\n    },[props.status])\n    return (\n        <>\n            {!editMode ? (\n                <div>\n                    <span onDoubleClick={activateEditMode}>\n                        {status || \"-----\"}\n                    </span>\n                </div>\n            ) : (\n                    <div>\n                        <input\n                            onChange={statusChange}\n                            autoFocus={true}\n                            onBlur={deactivateEditMode}\n                            value={status}\n                        />\n                    </div>\n                )}\n\n        </>\n    )\n}\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from './../../common/preloader/preloader';\n\nimport ProfileStatusWithHooks from './PrfolieStatuswithHooks';\n\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            {/* <div>\n                <img crs='https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.talkwalker.com%2Fblog%2Fwhat-is-image-analysis&psig=AOvVaw064vhZEMKq6fiLHSV7whld&ust=1605003720065000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCNjg2_ee9ewCFQAAAAAdAAAAABAD'></img>\n            </div> */}\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large}></img>\n                <span className={s.color}>{props.profile.fullName}</span>\n                <span className={s.color}>{props.profile.aboutMe}</span>\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;\n\n\n","import React from 'react';\nimport s from './Post.module.css';\n\n\n\nconst Post = (props) => {\n  console.log(props)\n  return (\n    <div className={s.item}>\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\n        { props.message }\n          <div>\n        <span>like</span> {props.likesCount}\n    </div>\n    </div>\n  )\n};\n\nexport default Post;\n","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post\";\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from \"../../../../utils/validators/validators\";\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo(props => {\n\n  let postsElements = props.posts.map(el => <Post message={el.message} likesCount={el.likesCount} />);\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostRedux onSubmit={onAddPost}/>\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\nconst maxlength10 = maxLengthCreator(10);\nconst AddNewPostForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field component={Textarea}\n        name='newPostText' \n        validate={[required, maxlength10]}\n        placeholder={'post message'}\n        />\n      <button>add post</button>\n    </form>\n  )\n};\n\nconst AddNewPostRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\nexport default MyPosts;\n","\nimport { addPostActionCreator } from '../../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost:(newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport MyPostsContainer from './../MyPosts/Post/MyPostsContainer'\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUsersProfile, getStatus, updateStatus } from './../../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport {compose} from \"redux\";\n\nclass ProfilesContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) { userId = this.props.authorizedUserId;\n        if(!userId) {\n            this.props.history.push('/login');\n        } \n    }\n        this.props.getUsersProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n        );\n    }\n};\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus }),\n    withRouter,\n    //withAuthRedirect\n    )(ProfilesContainer);\n"],"sourceRoot":""}